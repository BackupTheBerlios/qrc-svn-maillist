From jblebrun at mail.berlios.de  Wed Mar 19 19:49:28 2008
From: jblebrun at mail.berlios.de (jblebrun at BerliOS)
Date: Wed, 19 Mar 2008 18:49:28 -0000
Subject: [Qrc-svn] r303 - qrc/trunk
Message-ID: <200803191847.m2JIlgjJ032753@sheep.berlios.de>

Author: jblebrun
Date: 2008-03-19 19:47:42 +0100 (Wed, 19 Mar 2008)
New Revision: 303

Removed:
   qrc/trunk/bot-challenger/
Modified:
   qrc/trunk/configure.ac
Log:
Removed bot challenger, get bot-sentry, a standalone plugin

Modified: qrc/trunk/configure.ac
===================================================================
--- qrc/trunk/configure.ac	2007-08-09 01:05:47 UTC (rev 302)
+++ qrc/trunk/configure.ac	2008-03-19 18:47:42 UTC (rev 303)
@@ -39,10 +39,6 @@
 
 
 	
-AC_ARG_ENABLE([bot-challenger],
-	[AS_HELP_STRING(--enable-bot-challenger,build the bot-challenger plugin @<:@default=no@:>@)],,
-	[enable_bot_challenger="no"])
-
 AC_ARG_ENABLE([gaym],
 	[AS_HELP_STRING(--enable-gaym,build the gaym plugin @<:@default=yes@:>@)],,
 	[enable_gaym="yes"])
@@ -51,14 +47,10 @@
 	[AS_HELP_STRING(--enable-gaym-extras,build the gaym-extras plugin @<:@default=no@:>@)],,
 	[enable_gaym_extras="no"])
 
-AM_CONDITIONAL([COND_BOT_CHALLENGER], [test "$enable_bot_challenger" = "no"])
 AM_CONDITIONAL([COND_DISPLAY_OPTIONS], [test "$enable_display_options" = "yes"])
 AM_CONDITIONAL([COND_GAYM], [test "$enable_gaym" = "yes"])
 AM_CONDITIONAL([COND_GAYM_EXTRAS], [test "$enable_gaym_extras" = "yes"])
 
-if test "$enable_bot_challenger" != "yes" ; then
-	enable_bot_challenger="no"
-fi
 
 if test "$enable_display_options" != "yes" ; then
 	enable_display_options="no"
@@ -138,7 +130,6 @@
 
 
 AC_CONFIG_FILES([Makefile
-                 bot-challenger/Makefile
                  gaym/Makefile
                  gaym/pixmaps/Makefile
                  gaym/pixmaps/16/Makefile
@@ -155,7 +146,6 @@
 echo
 echo $PACKAGE $VERSION
 echo
-echo Build bot-challenger plugin...... : $enable_bot_challenger
 echo Build gaym plugin................ : $enable_gaym
 echo Build gaym-extras plugin......... : $enable_gaym_extras
 echo



From jblebrun at mail.berlios.de  Wed Mar 19 20:21:57 2008
From: jblebrun at mail.berlios.de (jblebrun at BerliOS)
Date: Wed, 19 Mar 2008 19:21:57 -0000
Subject: [Qrc-svn] r304 - qrc/trunk/gaym/src
Message-ID: <200803191920.m2JJKDYp003767@sheep.berlios.de>

Author: jblebrun
Date: 2008-03-19 20:20:13 +0100 (Wed, 19 Mar 2008)
New Revision: 304

Removed:
   qrc/trunk/gaym/src/botfilter.c
   qrc/trunk/gaym/src/botfilter.h
Log:
Removed botfilter

Deleted: qrc/trunk/gaym/src/botfilter.c
===================================================================
--- qrc/trunk/gaym/src/botfilter.c	2008-03-19 18:47:42 UTC (rev 303)
+++ qrc/trunk/gaym/src/botfilter.c	2008-03-19 19:20:13 UTC (rev 304)
@@ -1,270 +0,0 @@
-/**
- * GayM
- *
- * GayM is the legal property of its developers, whose names are too numerous
- * to list here.  Please refer to the COPYRIGHT file distributed with this
- * source distribution.
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 2 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
- */
-#include "prefs.h"
-#include "util.h"
-#include "debug.h"
-
-#include "botfilter.h"
-
-/* 1 day */
-#define MIN_CHECK_INTERVAL 60 * 60 * 24
-
-typedef struct _FilteredBot FilteredBot;
-struct _FilteredBot {
-    char *username;
-    /**
-     * We may need the following later:
-     *
-     * char *bio;
-     */
-};
-static GSList *filtered_bots = NULL;    /* GSList of FilteredBot */
-
-void update_filtered_bots(const char *nick, gboolean permitted)
-{
-    GSList *search = NULL;
-    gboolean found = FALSE;
-    for (search = filtered_bots; search; search = search->next) {
-        FilteredBot *bot = search->data;
-        if (!purple_utf8_strcasecmp(bot->username, nick)) {
-            found = TRUE;
-            break;
-        }
-    }
-
-    if (permitted) {
-        if (found) {
-            FilteredBot *bot = search->data;
-            g_free(bot->username);
-            g_free(bot);
-            filtered_bots = g_slist_remove_link(filtered_bots, search);
-        }
-    } else {
-        if (!found) {
-            FilteredBot *bot = g_new0(FilteredBot, 1);
-            bot->username = g_strdup(nick);
-            filtered_bots = g_slist_prepend(filtered_bots, bot);
-        }
-    }
-}
-
-gboolean gaym_botfilter_check(PurpleConnection * gc, const char *nick,
-                              const char *text,
-                              gboolean gaym_privacy_change)
-{
-    /**
-     * returns TRUE if allowed through, FALSE otherwise
-     */
-    gboolean permitted = TRUE;
-    int i = 0;
-
-    if (!purple_prefs_get_bool("/plugins/prpl/gaym/botfilter_enable")) {
-        permitted = TRUE;
-        update_filtered_bots(nick, permitted);
-        return permitted;
-    }
-
-    /* don't ignore self */
-    if (!purple_utf8_strcasecmp(gc->account->username, nick)) {
-        permitted = TRUE;
-        purple_debug_info("gaym", "declining to block/ignore self\n");
-        update_filtered_bots(nick, permitted);
-        return permitted;
-    }
-
-    /* don't ignore buddies */
-    if (purple_find_buddy(gc->account, nick)) {
-        permitted = TRUE;
-        return permitted;
-    }
-
-    /* don't ignore permit list members */
-    GSList *slist = NULL;
-    for (slist = gc->account->permit; slist != NULL; slist = slist->next) {
-        if (!purple_utf8_strcasecmp
-            (nick, purple_normalize(gc->account, (char *) slist->data))) {
-            permitted = TRUE;
-            return permitted;
-        }
-    }
-
-    /**
-     * prevent purple privacy changes from affecting previously
-     * filtered bots
-     */
-    if (gaym_privacy_change) {
-        permitted = TRUE;
-        GSList *search = NULL;
-        for (search = filtered_bots; search; search = search->next) {
-            FilteredBot *bot = search->data;
-            if (!purple_utf8_strcasecmp(bot->username, nick)) {
-                permitted = FALSE;
-                break;
-            }
-        }
-        return permitted;
-    }
-
-    if (!text) {
-        if (purple_prefs_get_bool
-            ("/plugins/prpl/gaym/botfilter_ignore_null")) {
-            permitted = FALSE;
-        } else {
-            permitted = TRUE;
-        }
-        update_filtered_bots(nick, permitted);
-        return permitted;
-    }
-
-    const char *sep =
-        purple_prefs_get_string("/plugins/prpl/gaym/botfilter_sep");
-    const char *patterns =
-        purple_prefs_get_string("/plugins/prpl/gaym/botfilter_patterns");
-    const char *gayboi_patterns =
-        purple_prefs_get_string("/plugins/prpl/gaym/botfilter_url_result");
-
-    if (!sep || !purple_utf8_strcasecmp(sep, "")
-        || ((!patterns || !purple_utf8_strcasecmp(patterns, ""))
-            && (!gayboi_patterns
-                || !purple_utf8_strcasecmp(gayboi_patterns, "")))) {
-        permitted = TRUE;
-        update_filtered_bots(nick, permitted);
-        return permitted;
-    }
-
-    char *combined = NULL;
-    if (patterns && purple_utf8_strcasecmp(patterns, "") && gayboi_patterns
-        && purple_utf8_strcasecmp(gayboi_patterns, "")) {
-        combined = g_strdup_printf("%s|%s", patterns, gayboi_patterns);
-    } else {
-        if (patterns && purple_utf8_strcasecmp(patterns, "")) {
-            combined = g_strdup_printf("%s", patterns);
-        } else if (gayboi_patterns
-                   && purple_utf8_strcasecmp(gayboi_patterns, "")) {
-            combined = g_strdup_printf("%s", gayboi_patterns);
-        }
-    }
-
-
-    gchar **pattern_list = g_strsplit(combined, sep, 0);
-
-    for (i = 0; pattern_list[i] != NULL; i++) {
-        if (g_pattern_match_simple(pattern_list[i], text)) {
-            permitted = FALSE;
-            break;
-        }
-    }
-    g_free(combined);
-    g_strfreev(pattern_list);
-
-    update_filtered_bots(nick, permitted);
-
-    return permitted;
-}
-
-void process_spamlist_from_web_cb(PurpleUtilFetchUrlData *url_data, void *data, const gchar *result,
-                                  gsize len, const gchar* error_message)
-{
-    if (!result) {
-        purple_prefs_set_string("/plugins/prpl/gaym/botfilter_url_result",
-                              "");
-        purple_prefs_set_int("/plugins/prpl/gaym/botfilter_url_last_check",
-                           0);
-        return;
-    }
-    if (!g_str_has_prefix(result, "<HTML>\n")) {
-        purple_prefs_set_string("/plugins/prpl/gaym/botfilter_url_result",
-                              "");
-        purple_prefs_set_int("/plugins/prpl/gaym/botfilter_url_last_check",
-                           0);
-        return;
-    }
-    if (!g_str_has_suffix(result, "</HTML>")) {
-        purple_prefs_set_string("/plugins/prpl/gaym/botfilter_url_result",
-                              "");
-        purple_prefs_set_int("/plugins/prpl/gaym/botfilter_url_last_check",
-                           0);
-        return;
-    }
-    const char *sep =
-        purple_prefs_get_string("/plugins/prpl/gaym/botfilter_sep");
-    if (!sep || !purple_utf8_strcasecmp(sep, "")) {
-        purple_prefs_set_string("/plugins/prpl/gaym/botfilter_url_result",
-                              "");
-        purple_prefs_set_int("/plugins/prpl/gaym/botfilter_url_last_check",
-                           0);
-        return;
-    }
-    char *html_stripped = purple_markup_strip_html(result);
-    char *stripped = g_strstrip(html_stripped);
-    char **split = g_strsplit(stripped, "\n ", 0);
-    char *starsep = g_strdup_printf("*%s*", sep);
-    char *joined = g_strjoinv(starsep, split);
-    char *url_result = g_strdup_printf("*%s*", joined);
-
-    purple_prefs_set_string("/plugins/prpl/gaym/botfilter_url_result",
-                          url_result);
-
-    g_free(url_result);
-    g_free(joined);
-    g_free(starsep);
-    g_strfreev(split);
-    g_free(html_stripped);
-}
-
-void get_spamlist_from_web(void)
-{
-    char *user_agent = "Mozilla/4.0";
-
-    const char *url =
-        purple_prefs_get_string("/plugins/prpl/gaym/botfilter_url");
-    if (!url || !purple_utf8_strcasecmp(url, "")) {
-        purple_prefs_set_string("/plugins/prpl/gaym/botfilter_url_result",
-                              "");
-        purple_prefs_set_int("/plugins/prpl/gaym/botfilter_url_last_check",
-                           0);
-        return;
-    }
-
-    int last_check =
-        purple_prefs_get_int("/plugins/prpl/gaym/botfilter_url_last_check");
-
-
-    if (!last_check || time(NULL) - last_check > MIN_CHECK_INTERVAL) {
-        purple_prefs_set_int("/plugins/prpl/gaym/botfilter_url_last_check",
-                           time(NULL));
-        purple_util_fetch_url(url, FALSE, user_agent, FALSE,
-                       process_spamlist_from_web_cb, NULL);
-    }
-
-    return;
-}
-
-void botfilter_url_changed_cb(const char *name, PurplePrefType type,
-                              gconstpointer value, gpointer data)
-{
-    purple_prefs_set_int("/plugins/prpl/gaym/botfilter_url_last_check", 0);
-}
-
-/**
- * vim:tabstop=4:shiftwidth=4:expandtab:
- */

Deleted: qrc/trunk/gaym/src/botfilter.h
===================================================================
--- qrc/trunk/gaym/src/botfilter.h	2008-03-19 18:47:42 UTC (rev 303)
+++ qrc/trunk/gaym/src/botfilter.h	2008-03-19 19:20:13 UTC (rev 304)
@@ -1,59 +0,0 @@
-/**
- * @file botfilter.h GayM Bot Filter API
- *
- * GayM
- *
- * GayM is the legal property of its developers, whose names are too numerous
- * to list here.  Please refer to the COPYRIGHT file distributed with this
- * source distribution.
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 2 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
- */
-#ifndef _PURPLE_GAYM_BOTFILTER_H_
-#define _PURPLE_GAYM_BOTFILTER_H_
-
-#include "connection.h"
-
-#include <glib.h>
-
-/**
- * Check if the account's botfilter settings allow or block the text
- *
- * @param gc                  The connection.
- * @param nick                The user to check.
- * @param text                The text to check.
- * @param gaym_privacy_change Invoked from gaym_privacy_change().
- *
- * @return TRUE if the user is allowed, or @c FALSE otherwise.
- */
-gboolean gaym_botfilter_check(PurpleConnection * gc, const char *nick,
-                              const char *text,
-                              gboolean gaym_privacy_change);
-
- /**
- * Get GayBoi's spam list from his website.  Since this is for the plugin
- * and not for any certain account, it should be done when the plugin
- * is loaded.
- */
-void get_spamlist_from_web(void);
-
-void botfilter_url_changed_cb(const char *name, PurplePrefType type,
-                              gconstpointer value, gpointer data);
-
-#endif                          /* _PURPLE_GAYM_BOTFILTER_H_ */
-
-/**
- * vim:tabstop=4:shiftwidth=4:expandtab:
- */



From jblebrun at mail.berlios.de  Wed Mar 19 20:39:14 2008
From: jblebrun at mail.berlios.de (jblebrun at BerliOS)
Date: Wed, 19 Mar 2008 19:39:14 -0000
Subject: [Qrc-svn] r305 - qrc/trunk/gaym/src
Message-ID: <200803191937.m2JJbUJE006136@sheep.berlios.de>

Author: jblebrun
Date: 2008-03-19 20:37:29 +0100 (Wed, 19 Mar 2008)
New Revision: 305

Modified:
   qrc/trunk/gaym/src/Makefile.am
   qrc/trunk/gaym/src/cmds.c
   qrc/trunk/gaym/src/gaym.c
   qrc/trunk/gaym/src/gaympriv.c
   qrc/trunk/gaym/src/msgs.c
Log:
Removed botfilter code

Modified: qrc/trunk/gaym/src/Makefile.am
===================================================================
--- qrc/trunk/gaym/src/Makefile.am	2008-03-19 19:20:13 UTC (rev 304)
+++ qrc/trunk/gaym/src/Makefile.am	2008-03-19 19:37:29 UTC (rev 305)
@@ -2,8 +2,6 @@
 	$(PURPLE_LIBDIR)/purple-2
 
 GAYMSOURCES = \
-	botfilter.c \
-	botfilter.h \
 	cmds.c \
 	gaym.c \
 	gaym.h \

Modified: qrc/trunk/gaym/src/cmds.c
===================================================================
--- qrc/trunk/gaym/src/cmds.c	2008-03-19 19:20:13 UTC (rev 304)
+++ qrc/trunk/gaym/src/cmds.c	2008-03-19 19:37:29 UTC (rev 305)
@@ -276,6 +276,7 @@
     gaym_send(gaym, buf);
     g_free(buf);
 
+    purple_debug_misc("names","target is %s\n",target);
     gaym->nameconv = g_strdup(target);
 
     return 0;

Modified: qrc/trunk/gaym/src/gaym.c
===================================================================
--- qrc/trunk/gaym/src/gaym.c	2008-03-19 19:20:13 UTC (rev 304)
+++ qrc/trunk/gaym/src/gaym.c	2008-03-19 19:37:29 UTC (rev 305)
@@ -39,7 +39,6 @@
 #include "helpers.h"
 #include "gayminfo.h"
 #include "gaympriv.h"
-#include "botfilter.h"
 #include "gaym.h"
 
 static const char *gaym_blist_icon(PurpleAccount * a, PurpleBuddy * b);
@@ -668,7 +667,6 @@
 
         char *user_agent = "Mozilla/4.0";
 
-        get_spamlist_from_web();
         purple_util_fetch_url(url, FALSE, user_agent, FALSE,
                        gaym_get_configtxt_cb, gaym);
 
@@ -1539,39 +1537,7 @@
                                         ("Bio-Based Chat Room Activity Filtering"));
     purple_plugin_pref_frame_add(frame, ppref);
 
-    ppref =
-        purple_plugin_pref_new_with_name_and_label
-        ("/plugins/prpl/gaym/botfilter_enable", _("Enable"));
-    purple_plugin_pref_frame_add(frame, ppref);
 
-    ppref =
-        purple_plugin_pref_new_with_name_and_label
-        ("/plugins/prpl/gaym/botfilter_ignore_null",
-         _("Ignore if bio is blank"));
-    purple_plugin_pref_frame_add(frame, ppref);
-
-    ppref =
-        purple_plugin_pref_new_with_name_and_label
-        ("/plugins/prpl/gaym/botfilter_patterns",
-         _
-         ("Ignore if bio contains these patterns\n\t? = match any single character\n\t* = match zero, one, or more"));
-    purple_plugin_pref_frame_add(frame, ppref);
-
-    ppref =
-        purple_plugin_pref_new_with_name_and_label
-        ("/plugins/prpl/gaym/botfilter_sep",
-         _("Above patterns are separated by"));
-    purple_plugin_pref_set_max_length(ppref, 1);
-    purple_plugin_pref_frame_add(frame, ppref);
-
-    ppref =
-        purple_plugin_pref_new_with_name_and_label
-        ("/plugins/prpl/gaym/botfilter_url",
-         _
-         ("URL for GayBoi's spam database\n\tblank to disable\n\tchanges affect next login\n\tdefault is "
-          GAYBOI_SPAM_URL));
-    purple_plugin_pref_frame_add(frame, ppref);
-
     return frame;
 }
 
@@ -1721,21 +1687,6 @@
     purple_prefs_add_bool("/plugins/prpl/gaym/show_part", TRUE);
     purple_prefs_add_bool("/plugins/prpl/gaym/show_bio_with_join", TRUE);
 
-    purple_prefs_add_bool("/plugins/prpl/gaym/botfilter_enable", FALSE);
-    purple_prefs_add_bool("/plugins/prpl/gaym/botfilter_ignore_null", FALSE);
-    purple_prefs_add_string("/plugins/prpl/gaym/botfilter_sep", "|");
-    purple_prefs_add_string("/plugins/prpl/gaym/botfilter_patterns",
-                          "NULL|MODE * -i|*dantcamboy*|*Free preview*|*epowerchat*|*Live gay sex cam show*|*camboiz*");
-    purple_prefs_add_string("/plugins/prpl/gaym/botfilter_url",
-                          GAYBOI_SPAM_URL);
-
-    purple_prefs_connect_callback("/plugins/prpl/gaym/botfilter_url",
-                                "botfilter_url", botfilter_url_changed_cb,
-                                NULL);
-
-    purple_prefs_add_string("/plugins/prpl/gaym/botfilter_url_result", "");
-    purple_prefs_add_int("/plugins/prpl/gaym/botfilter_url_last_check", 0);
-
     _gaym_plugin = plugin;
 
     gaym_register_commands();

Modified: qrc/trunk/gaym/src/gaympriv.c
===================================================================
--- qrc/trunk/gaym/src/gaympriv.c	2008-03-19 19:20:13 UTC (rev 304)
+++ qrc/trunk/gaym/src/gaympriv.c	2008-03-19 19:37:29 UTC (rev 305)
@@ -35,7 +35,6 @@
 #include "util.h"
 
 /* local headers for this plugin */
-#include "botfilter.h"
 #include "gaym.h"
 #include "gaympriv.h"
 #include "helpers.h"
@@ -152,9 +151,7 @@
                 purple_conversation_get_ui_ops(convo);
             if (name) {
                 if (!purple_utf8_strcasecmp(name, buddy->name)) {
-                    if (gaym_privacy_check(gc, buddy->name)
-                        && gaym_botfilter_check(gc, buddy->name, NULL,
-                                                TRUE)) {
+                    if (gaym_privacy_check(gc, buddy->name)) {
                         purple_conv_chat_unignore(PURPLE_CONV_CHAT(convo),
                                                 buddy->name);
                     } else {
@@ -164,8 +161,7 @@
                     ops->chat_update_user((convo), buddy->name);
                 }
             } else {
-                if (gaym_privacy_check(gc, buddy->name)
-                    && gaym_botfilter_check(gc, buddy->name, NULL, TRUE)) {
+                if (gaym_privacy_check(gc, buddy->name)) {
                     purple_conv_chat_unignore(PURPLE_CONV_CHAT(convo),
                                             buddy->name);
                 } else {

Modified: qrc/trunk/gaym/src/msgs.c
===================================================================
--- qrc/trunk/gaym/src/msgs.c	2008-03-19 19:20:13 UTC (rev 304)
+++ qrc/trunk/gaym/src/msgs.c	2008-03-19 19:37:29 UTC (rev 305)
@@ -32,7 +32,6 @@
 #include "privacy.h"
 #include "prefs.h"
 
-#include "botfilter.h"
 #include "gaym.h"
 #include "gayminfo.h"
 #include "gaympriv.h"
@@ -787,8 +786,6 @@
     gaym_buddy_status(gaym, nick, TRUE, args[1], TRUE);
 
 
-    gboolean gaym_botfilter_permit =
-        gaym_botfilter_check(gc, nick, bio, FALSE);
 
     bio = gaym_bio_strdup(args[1]);
     if (bio) {
@@ -810,12 +807,10 @@
     if (purple_prefs_get_bool("/plugins/prpl/gaym/show_bio_with_join")) {
         purple_conv_chat_add_user(PURPLE_CONV_CHAT(convo), nick, bio_markedup,
                                 flags, (gaym_privacy_permit
-                                        && gaym_botfilter_permit
                                         && show_join));
     } else {
         purple_conv_chat_add_user(PURPLE_CONV_CHAT(convo), nick, NULL,
                                 flags, (gaym_privacy_permit
-                                        && gaym_botfilter_permit
                                         && show_join));
     }
 
@@ -823,7 +818,7 @@
      * Make the ignore.png icon appear next to the nick.
      */
     PurpleConversationUiOps *ops = purple_conversation_get_ui_ops(convo);
-    if (gaym_privacy_permit && gaym_botfilter_permit) {
+    if (gaym_privacy_permit) {
         purple_conv_chat_unignore(PURPLE_CONV_CHAT(convo), nick);
     } else {
         purple_conv_chat_ignore(PURPLE_CONV_CHAT(convo), nick);
@@ -1473,8 +1468,6 @@
                                             gaym->account);
 
     char *bio = gaym_bio_strdup(extra);
-    gboolean gaym_botfilter_permit =
-        gaym_botfilter_check(gc, nick, bio, FALSE);
     g_free(bio);
 
     gaym_buddy_status(gaym, nick, TRUE, extra, FALSE);
@@ -1498,7 +1491,7 @@
      * Make the ignore.png icon appear next to the nick.
      */
     PurpleConversationUiOps *ops = purple_conversation_get_ui_ops(convo);
-    if (gaym_privacy_check(gc, nick) && gaym_botfilter_permit) {
+    if (gaym_privacy_check(gc, nick)) {
         purple_conv_chat_unignore(PURPLE_CONV_CHAT(convo), nick);
     } else {
         purple_conv_chat_ignore(PURPLE_CONV_CHAT(convo), nick);



